
/*
  I want to be efficient at cpp, and I found this website called project Euler.
  so I will try to solve at least three or four problems per week.
  .
  According to project Euler, the first 100 problems can be shared,
  so these are my solutions to the first 100 problems.
  Enjoy and of course, feedback is more than welcome  
*/

//#####################################################################################################
/*PROBLEM 1*/
/*
    If we list all the natural numbers below 10
    that are multiples of 3 or 5, we get 3, 5, 6 and 9.
    The sum of these multiples is 23.

    Find the sum of all the multiples of 3 or 5 below 1000.
*/

#include <iostream>

using namespace std;

int main()
{
    int MAX = 1000;
    int c{0};
    
    for (int i = 0; i!=MAX; i++)
    {
        if (i%3 == 0 || i%5 == 0)
        {
            c+=i;
        };
        
    }
    cout << c;
}


//#####################################################
/*PROBLEM 2*/
/*
	Each new term in the Fibonacci sequence is generated by adding the previous two terms.
	By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	By considering the terms in the Fibonacci sequence whose values do not exceed four million,

	find the sum of the even-valued terms.
*/


#include <iostream>

using namespace std;

int main()
{
    int MAX = 4000000;
    int a1 = 1;
    int a2 = 2;
    int s = 2;
    int r = 0;
    
    while(r < MAX)
    {
        r = a1 + a2;
        a1 = a2;
        a2 = r;
        if (a2%2==0)
        {
            s += a2;
        }
    }
    cout << s;
}   

//###########################################
/*PROBLEM 3*/

#include <iostream>
#include <math.h>

using namespace std;

long int isitprime(long int a)
{
    long int aa = sqrt(a);
    
    while (aa > 0)	
    {
        aa -= 1;       
        if (a%aa == 0)
        {
            long int aaa = aa;
            while(aaa>0)
            {
                aaa-=1;
                if (aa%aaa==0 && aaa!=1)
                {
                    break;
                }
                else if (aaa == 1)
                {
                    return aa;
                }
            }
        }
        
        
    }
}
int main()
{
    cout << isitprime(600851475143 ); 
}   



//#######################################################
/*PROBLEM 4*/


/*
    can be divided by 1  ==> every integer;                                     ####
    can be divided by 2  ==> last digit is even (0,2,4,6,8);                    ####
    can be divided by 3  ==>
    can be divided by 4  ==> 
    can be divided by 5  ==> last digit must be either 0 or 5;                  ####
    can be divided by 6  ==> 
    can be divided by 7  ==>
    can be divided by 8  ==>
    can be divided by 9  ==>
    can be divided by 10 ==> last digit must be 0                              ####
    can be divided by 11 ==> 
    can be divided by 12 ==>
    can be divided by 13 ==> 
    can be divided by 14 ==>
    can be divided by 15 ==> either 15, 30, 45, 60, 75, 90, 105, 120,135, 150
    can be divided by 16 ==>
    can be divided by 17 ==>
    can be divided by 18 ==>
    can be divided by 19 ==>
    can be divided by 20 ==> last two digits must be multiplier of 20           ####
                             which means (00,20,40,60,80)
    
    
    
    our number must end with a zero
    our number must second digit from the end is either 0,2,4,6,8
	
	the number can be divided by 
    
    wait a min, if 2520 can be divided by numbers [1-10] 
    then its multipliers will be the same same
    
*/



/* 25 min*/
#include <iostream>

using namespace std;

int main()
{
    int number = 2520;
    int dividers_max = 10;
    
    for (int i=20; i<100000000; i++)
    {
        int r = i*2520;
        if (r%11 == 0 && r%12 == 0 &&  r%13 == 0 && r%14 == 0 && r%16 == 0 && r%17 == 0 && r%18 == 0 && r%19 == 0)
        {
            cout << r;
            break;
        }
    }

}

